/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sender;

import java.awt.Color;
import java.awt.Container;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;

/**
 * @관리자페이지 메인 GUI
 * @싱글톤 패턴
 * @반복자 패턴
 *
 * @author 이상훈
 */
public class AdministratorPage extends javax.swing.JFrame implements JFrameColor {

    /**
     * Creates new form MainController
     */
    public static AdministratorPage administratorPage;
    public static Container colorContainer;

    DefaultListModel directoryBoxModel = new DefaultListModel(); // 디렉토리를 나타내는 리스트 모델
    ArrayList<String> selected = new ArrayList<String>(); // 디렉터리 선택 항목 

    public AdministratorPage() {
        initComponents();
        administratorPage = this;
        list_directoryBox.setModel(directoryBoxModel); // listmodel setting
        this.changeColor(ThemeManager.getThemeManager().color);
        showDirectory();
    }

    @Override
    public void changeColor(Color _color) {
        this.getContentPane().setBackground(_color);
    }

    public void showDirectory() {
        directoryBoxModel.clear();
        ArrayList<String> elementIdNames = new ArrayList<String>();
        elementIdNames = DirectoryManager.getDirectoryManager().getNow().getElementIdNames();
        elementIdNames.sort(null); // sort
        Iterator<String> elementIdNamesIterator = elementIdNames.iterator();
        while (elementIdNamesIterator.hasNext()) {
            directoryBoxModel.addElement(elementIdNamesIterator.next());
        }
        tf_path.setText("path : root/" + DirectoryManager.getDirectoryManager().getNow().getPath()); // path paint
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sp_directoryBoxScrollPanel = new javax.swing.JScrollPane();
        list_directoryBox = new javax.swing.JList<>();
        btn_goOut = new javax.swing.JButton();
        tf_path = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btn_sendNotice = new javax.swing.JButton();
        btn_addGroup = new javax.swing.JButton();
        btn_addUser = new javax.swing.JButton();
        btn_remove = new javax.swing.JButton();
        btn_goIn = new javax.swing.JButton();
        mbar_menu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mbtn_saveDirectory = new javax.swing.JMenuItem();
        mbtn_loadDirectory = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mbtn_refresh = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mbtn_theme = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Notice Program (Sender)");

        list_directoryBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                list_directoryBoxMousePressed(evt);
            }
        });
        sp_directoryBoxScrollPanel.setViewportView(list_directoryBox);

        btn_goOut.setText("Go out");
        btn_goOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_goOutActionPerformed(evt);
            }
        });

        tf_path.setEditable(false);
        tf_path.setFocusable(false);

        btn_sendNotice.setText("Send Notice");
        btn_sendNotice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sendNoticeActionPerformed(evt);
            }
        });

        btn_addGroup.setText("Add Group");
        btn_addGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addGroupActionPerformed(evt);
            }
        });

        btn_addUser.setText("Add User");
        btn_addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addUserActionPerformed(evt);
            }
        });

        btn_remove.setText("Remove");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });

        btn_goIn.setText("Go in");
        btn_goIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_goInActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        mbtn_saveDirectory.setText("Save Directory");
        mbtn_saveDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbtn_saveDirectoryActionPerformed(evt);
            }
        });
        jMenu1.add(mbtn_saveDirectory);

        mbtn_loadDirectory.setText("Load Directory");
        mbtn_loadDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbtn_loadDirectoryActionPerformed(evt);
            }
        });
        jMenu1.add(mbtn_loadDirectory);

        mbar_menu.add(jMenu1);

        jMenu2.setText("Control");

        mbtn_refresh.setText("Refresh");
        mbtn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbtn_refreshActionPerformed(evt);
            }
        });
        jMenu2.add(mbtn_refresh);

        mbar_menu.add(jMenu2);

        jMenu3.setText("Setting");

        mbtn_theme.setText("Theme Change");
        mbtn_theme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbtn_themeActionPerformed(evt);
            }
        });
        jMenu3.add(mbtn_theme);

        mbar_menu.add(jMenu3);

        setJMenuBar(mbar_menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp_directoryBoxScrollPanel)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tf_path)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_goIn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_goOut, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addComponent(btn_addGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_remove, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_sendNotice, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 97, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_sendNotice)
                    .addComponent(btn_addGroup)
                    .addComponent(btn_addUser)
                    .addComponent(btn_remove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_goOut)
                    .addComponent(btn_goIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp_directoryBoxScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mbtn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbtn_refreshActionPerformed
        // TODO add your handling code here:
        showDirectory();
    }//GEN-LAST:event_mbtn_refreshActionPerformed

    private void btn_goInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_goInActionPerformed
        // TODO add your handling code here:
        if (selected == null) {
            return;
        }

        if (selected.size() == 1) {
            HashMap<String, DirectorySystem> includedsHash
                    = DirectoryManager.getDirectoryManager().getNow().getHashMap();

            if (includedsHash.containsKey(selected.get(0))) {
                try {
                    if (includedsHash.get(selected.get(0)).getFolder() != null) {
                        Folder folder = includedsHash.get(selected.get(0)).getFolder();
                        DirectoryManager.getDirectoryManager().setNow(folder);
                    }

                } catch (Exception e) {

                }
            }
            showDirectory();
        }

    }//GEN-LAST:event_btn_goInActionPerformed

    private void list_directoryBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_directoryBoxMousePressed
        // TODO add your handling code here:
        HashMap<String, DirectorySystem> includedsHash
                = DirectoryManager.getDirectoryManager().getNow().getHashMap();
        selected = !list_directoryBox.getSelectedValuesList().isEmpty() ? (ArrayList) list_directoryBox.getSelectedValuesList() : new ArrayList<String>();
    }//GEN-LAST:event_list_directoryBoxMousePressed

    private void btn_goOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_goOutActionPerformed
        // TODO add your handling code here:
        if (DirectoryManager.getDirectoryManager().getNow().getParent() != null) {
            DirectoryManager.getDirectoryManager().setNow(
                    (Folder) DirectoryManager.getDirectoryManager().getNow().getParent()
            );
        }
        showDirectory();
    }//GEN-LAST:event_btn_goOutActionPerformed

    private void btn_addGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addGroupActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddGroupPage().setVisible(true);
            }
        });

    }//GEN-LAST:event_btn_addGroupActionPerformed

    private void btn_addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addUserActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUserPage().setVisible(true);
            }
        });
    }//GEN-LAST:event_btn_addUserActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        // TODO add your handling code here:
        Iterator<String> iterator = selected.iterator();
        while (iterator.hasNext()) {
            String temp = iterator.next();
            DirectoryManager.getDirectoryManager().getNow().getHashMap().get(temp).remove();
        }
        //memento add

        showDirectory();
    }//GEN-LAST:event_btn_removeActionPerformed

    private void btn_sendNoticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sendNoticeActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoticePage().setVisible(true);
            }
        });
    }//GEN-LAST:event_btn_sendNoticeActionPerformed

    private void mbtn_saveDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbtn_saveDirectoryActionPerformed
        // TODO add your handling code here:
        FileManager.getFileManager().saveDirectory();
    }//GEN-LAST:event_mbtn_saveDirectoryActionPerformed

    private void mbtn_loadDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbtn_loadDirectoryActionPerformed
        // TODO add your handling code here:
        FileManager.getFileManager().loadDirectory();
    }//GEN-LAST:event_mbtn_loadDirectoryActionPerformed

    private void mbtn_themeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbtn_themeActionPerformed
        // TODO add your handling code here:
        ThemeManager.getThemeManager().toggleTheme();
        this.changeColor(ThemeManager.getThemeManager().color);
    }//GEN-LAST:event_mbtn_themeActionPerformed

    /**
     * @param args the command line arguments
     */
    public void run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministratorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministratorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministratorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministratorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministratorPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addGroup;
    private javax.swing.JButton btn_addUser;
    private javax.swing.JButton btn_goIn;
    private javax.swing.JButton btn_goOut;
    private javax.swing.JButton btn_remove;
    private javax.swing.JButton btn_sendNotice;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> list_directoryBox;
    private javax.swing.JMenuBar mbar_menu;
    private javax.swing.JMenuItem mbtn_loadDirectory;
    private javax.swing.JMenuItem mbtn_refresh;
    private javax.swing.JMenuItem mbtn_saveDirectory;
    private javax.swing.JMenuItem mbtn_theme;
    private javax.swing.JScrollPane sp_directoryBoxScrollPanel;
    private javax.swing.JTextField tf_path;
    // End of variables declaration//GEN-END:variables
}
